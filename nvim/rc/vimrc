
function! s:source_rc(path, ...) abort
    let use_global = get(a:000, 0, !has('vim_starting'))
    " Symbolic links
    let abspath = resolve(expand('~/.config/nvim/rc/' . a:path))
    if !use_global
        execute 'source' fnameescape(abspath)
        return
    endif

    " substitute all 'set' to 'setglobal'
    let content = map(readfile(abspath),
                \'substitute(v:val, "^\\W*\\zsset\\ze\\W", "setglobal", "")')
    " create tempfile and source the tempfile
    let tempfile = tempname()
    try
        call writefile(content, tempfile)
        execute 'source' fnameescape(tempfile)
    finally
        if filereadable(tempfile)
            call delete(tempfile)
        endif
    endtry
endfunction

augroup MyAutoCmd
  autocmd!
  autocmd CursorHold *.toml syntax sync minlines=300
  autocmd BufNewFile,BufRead *.rb setlocal tabstop=2 softtabstop=2 shiftwidth=2
  autocmd BufNewFile,BufRead *.html setlocal tabstop=2 softtabstop=2 shiftwidth=2
  autocmd BufNewFile,BufRead *.blade.php setlocal tabstop=2 softtabstop=2 shiftwidth=2
  autocmd BufNewFile,BufRead *.js setlocal tabstop=2 softtabstop=2 shiftwidth=2
  autocmd BufNewFile,BufRead *.vue setlocal tabstop=2 softtabstop=2 shiftwidth=2
  autocmd FileType vue syntax sync fromstart
  
  autocmd BufWritePost *.php silent! eval '[ -f ".git/hooks/ctags" ]; and .git/hooks/ctags'
  autocmd FileType help,git-status,git-log nnoremap <buffer> q <C-w>c
augroup END


if has('vim_starting')
    call s:source_rc('init.rc.vim')
endif

if has('nvim')
  call s:source_rc('neovim.rc.vim')
endif

call s:source_rc('dein.rc.vim')

if has('vim_starting') && !empty(argv())
  call vimrc#on_filetype()
endif

if !has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')

  syntax enable
  filetype plugin indent on
endif

"---------------------------------------------------------------------------

call s:source_rc('options.rc.vim')

call s:source_rc('mappings.rc.vim')

"---------------------------------------------------------------------------

set secure
colorscheme yaflandia
let g:airline_theme = 'dark'
