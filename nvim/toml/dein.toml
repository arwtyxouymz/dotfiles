[[plugins]]
repo = 'Shougo/dein.vim'


[[plugins]]
repo = 'JBakamovic/yaflandia'
hook_add = '''
    if (has("termguicolors"))
        set termguicolors
    endif
    set t_Co=256
    set background=dark
'''

[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
    let g:polyglot_disabled = ['jsx']
'''

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
    " 行の最初の文字の前にコメント文字をトグル
    nmap <Leader>, <Plug>(caw:hatpos:toggle)
    vmap <Leader>, <Plug>(caw:hatpos:toggle)
    " 行頭にコメントをトグル
    nmap <Leader>c<leader> <Plug>(caw:hatpos:comment)
    vmap <Leader>c<leader> <Plug>(caw:hatpos:comment)
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    " 隠しファイルを設定する
    let NERDTreeShowHidden = 1
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
    " トグル設定
    map <C-e> <plug>NERDTreeTabsToggle<CR>
    " 起動時有効
    let g:nerdtree_tabs_open_on_console_startup=1
    " 起動時にファイルにカーソルを合わせる
    function! s:MoveCursorAtStart()
        call feedkeys("\<C-l>")
    endfunction
    autocmd VimEnter * NERDTree | call s:MoveCursorAtStart()
'''
depends = ['nerdtree']

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    " タブラインの表示
    let g:airline#extensions#tabline#enabled = 1
    " （タブが一個の場合）バッファのリストをタブラインに表示する機能をオフ
    let g:airline#extensions#tabline#show_buffers = 0
    " 0でそのタブで開いてるウィンドウ数、1で左のタブから連番
    let g:airline#extensions#tabline#tab_nr_type = 1
    " パワーラインフォントの使用
    let g:airline_powerline_fonts = 1
    " aleの表示
    let g:airline#extensions#ale#enabled = 1
    " Do not collapse the status line while having multiple windows
    let g:airline_inactive_collapse = 0
    " tagbarの表示
    let g:airline#extensions#tagbar#enabled = 1
'''
depends = ['vim-airline_themes']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'shougo/neosnippet-snippets'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
    nmap [figitive] <nop>
    map <leader>g [figitive]
    noremap <silent> [figitive]s :<c-u>Gstatus<cr>
    noremap <silent> [figitive]d :<c-u>Gdiff<cr>
    noremap <silent> [figitive]r :<c-u>Gread<cr>
    noremap <silent> [figitive]b :<c-u>Gblame<cr>
    noremap <silent> [figitive]l :<c-u>Glog<cr>
    noremap [figitive]c :Gcommit -m 
    noremap [figitive]p :Gpush origin 
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    set updatetime=100
'''

[[plugins]]
repo = 'mattn/gist-vim'
hook_add = '''
    let g:gist_clip_command = 'pbcopy'
    let g:gist_detect_filetype = 1
    let g:github_user = 'arwtyxouymz'
    let g:github_token = '52c580960406f1b7bba60ee427326903999e0ee3'
'''
depends = ['webapi-vim']

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'shougo/context_filetype.vim'

[[plugins]]
repo = 'yggdroot/indentline'
hook_add = '''
    set list lcs=tab:\|\
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = ['./install.sh']
hook_add = '''
    let s:node = empty($XDG_CONFIG_HOME) ? expand('$HOME/.config') : $XDG_CONFIG_HOME
    let g:LanguageClient_serverCommands = {
        \ 'c': ['clangd', '-compile-commands-dir=' . getcwd() . '/build'],
        \ 'cpp': ['clangd', '-compile-commands-dir=' . getcwd() . '/build'],
        \ 'vue': ['vls'],
        \ 'html': [],
        \ 'css': [],
        \ 'javascript': [],
        \ 'bash': ['bash-language-server', 'start'],
        \ 'sh': ['bash-language-server', 'start'],
    \ }
    " not stop completion $ & /
    set hidden
'''
hook_source = '''
    nnoremap <F5> :call LanguageClient_contextMenu()<CR>
    " Or map each action separately
    nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
    nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
    nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    " シンボルカラムを表示したままにする
    let g:ale_sign_column_always = 1
    " 保存時に整形してくれる
    let g:ale_fix_on_save = 1
    " 補完してくれる
    let g:ale_completion_enabled = 1
    " エラー行に表示するマーク
    let g:ale_sign_error = '⨉'
    let g:ale_sign_warning = '⚠'
    " エラー行にカーソルをあわせた際に表示されるメッセージフォーマット
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

    let g:ale_linters = {
        \   'php' : ['phpcs'],
        \   'javascript': ['eslint'],
        \   'cpp' : ['clangtidy', 'clangcheck']
    \}
    let g:ale_php_phpcs_executable = '/Users/ryutaro/.config/composer/vendor/bin/phpcs'
    let g:ale_php_phpcs_standard = 'PSR2'
    let g:ale_php_phpcs_global = 1

'''

[[plugins]]
repo = 'thinca/vim-template'
hook_add = '''
    let g:template_basedir = '~/.config/nvim/autoload'
    let g:template_free_pattern = 'template'
    " テンプレート中に含まれる文字を置き換える
    autocmd MyAutoCmd User plugin-template-loaded call s:template_keywords()
    function! s:template_keywords()
    silent! %s/<+DATE+>/\=strftime('%Y-%m-%d %T')/g
    silent! %s/<+FILENAME+>/\=fnamemodify(expand('%:r'), ":t:r")/g
    endfunction
    " テンプレート中に含まれる'<+CURSOR+>'にカーソルを移動
    autocmd MyAutoCmd User plugin-template-loaded
    \   if search('<+CURSOR+>')
    \ |   silent! execute 'normal! "_da>'
    \ | endif
'''
