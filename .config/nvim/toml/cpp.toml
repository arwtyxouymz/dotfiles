# 補完
[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['cmake']
hook_source = '''
    autocmd FileType cmake setlocal completeopt-=preview
    autocmd FileType c setlocal completeopt-=preview
    autocmd FileType cpp setlocal completeopt-=preview
    let g:deoplete#sources#clang#sort_algo = 'priority'
    let g:deoplete#sources#clang#libclang_path = system("llvm-config --prefix")[:-2] . '/lib/libclang.dylib'
    let g:deoplete#sources#clang#clang_header = system("llvm-config --prefix")[:-2] . '/lib/clang'
    " let g:deoplete#sources#clang#clang_complete_database="./build/"
'''
depends = ['deoplete.nvim']

# Debugger
# [[plugins]]
# repo = 'huawenyu/neogdb.vim'
# on_ft = ['c', 'cpp']
# [[plugins]]
# repo = 'sakhnik/nvim-gdb'
# on_ft = ['c', 'cpp']
[[plugins]]
repo = 'dbgx/lldb.nvim'
on_ft = ['c', 'cpp']

# cpp syntax
[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = ['c', 'cpp', 'cmake']

# include completion
[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

# moving header and source
[[plugins]]
repo = 'vim-scripts/a.vim'
on_ft = ['c', 'cpp']
hook_source = '''
    nmap <silent> <leader>aa :A<CR>
    nmap <silent> <leader>at :AT<CR>
    nmap <silent> <leader>av :AV<CR>
'''

# rtags
[[plugins]]
repo = 'lyuts/vim-rtags'
on_ft = ['c', 'cpp']
hook_add = '''
    let g:rtagsUseDefaultMappings = 0
    let g:rtagsAutoLaunchRdm = 1
'''
hook_source = '''
    noremap <leader>ri :call rtags#SymbolInfo()<CR>
    noremap <Leader>rj :call rtags#JumpTo(g:SAME_WINDOW)<CR>
    noremap <Leader>rJ :call rtags#JumpTo(g:SAME_WINDOW, { '--declaration-only' : '' })<CR>
    noremap <Leader>rS :call rtags#JumpTo(g:H_SPLIT)<CR>
    noremap <Leader>rV :call rtags#JumpTo(g:V_SPLIT)<CR>
    noremap <Leader>rT :call rtags#JumpTo(g:NEW_TAB)<CR>
    noremap <Leader>rp :call rtags#JumpToParent()<CR>
    noremap <Leader>rf :call rtags#FindRefs()<CR>
    noremap <Leader>rF :call rtags#FindRefsCallTree()<CR>
    noremap <Leader>rn :call rtags#FindRefsByName(input("Pattern? ", "", "customlist,rtags#CompleteSymbols"))<CR>
    noremap <Leader>rs :call rtags#FindSymbols(input("Pattern? ", "", "customlist,rtags#CompleteSymbols"))<CR>
    noremap <Leader>rr :call rtags#ReindexFile()<CR>
    noremap <Leader>rl :call rtags#ProjectList()<CR>
    noremap <Leader>rw :call rtags#RenameSymbolUnderCursor()<CR>
    noremap <Leader>rv :call rtags#FindVirtuals()<CR>
    noremap <Leader>rb :call rtags#JumpBack()<CR>
    noremap <Leader>rC :call rtags#FindSuperClasses()<CR>
    noremap <Leader>rc :call rtags#FindSubClasses()<CR>
    noremap <Leader>rd :call rtags#Diagnostics()<CR>
'''

# cmake plugin
[[plugins]]
repo = 'vhdirk/vim-cmake'
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
'''

# Doxygen
[[plugins]]
repo = 'vim-scripts/DoxygenToolkit.vim'
on_ft = ['c', 'cpp']
hook_source = '''
    nmap <leader>dox :Dox<CR>
'''
